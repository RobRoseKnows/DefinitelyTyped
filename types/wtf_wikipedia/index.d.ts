// Type definitions for wtf_wikipedia 7.3
// Project: https://github.com/spencermountain/wtf_wikipedia#readme
// Definitions by: Rob Rose <https://github.com/RobRoseKnows>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

export = wtf;
export as namespace wtf;

declare function wtf(wiki: string, options: any): any;

declare module wtf {

    export const version: string;

    export function category(cat: string, lang: string, options: object, cb: any): Promise<object>;

    export function fetch(title: string | string[], lang: string, options: object, cb: any): Promise<Document>;

    export function random(lang: string, options: object, cb: any): any;

    class Document {

        data: object;

        options: object;

        title(str: string | undefined): string;

        isRedirect(): boolean;

        redirectTo(): Document;

        // Alias of redirectTo
        redirectsTo(): Document;

        // Alias of redirectTo
        redirect(): Document;

        // Alias of redirectTo
        redirects(): Document;

        isDisambiguation(): boolean;

        // Alias of isDisambiguation
        isDisambig(): boolean;

        categories(clue: number): Category;

        // Singular
        category(clue: number): Category;

        categories(): Category[];

        sections(clue: number | string): Section;

        // Generated by plurals
        section(clue: number | string): Section;

        sections(): Section[];

        paragraphs(n: number): Paragraph;

        paragraphs(): Paragraph[];

        paragraph(n: number | undefined): Paragraph;

        sentences(n: number): Sentence;

        // Generated by plurals
        sentence(n: number): Sentence;

        sentences(): Sentence[];

        images(clue: number): Image;

        // Singular
        image(clue: number): Image;

        images(): Image[];

        links(clue: string | undefined | null): object[];

        links(clue: number): object;

        // Singular
        link(clue: number): object;

        interwiki(clue: string | undefined | null): object[];

        interwiki(clue: number): object;

        lists(clue: string | undefined | null): List[];

        lists(clue: number): List;

        tables(clue: string | undefined | null): Table[];

        tables(clue: number): Table;

        // Singular
        table(clue: number): Table;

        templates(clue: string | undefined | null): Template[];

        templates(clue: number): Template;

        references(clue: string | undefined | null): Reference[];

        references(clue: number): Reference;

        // Singular
        reference(clue: number): Reference;

        // Alias of references
        citations(clue: string | undefined | null): Reference[];

        // Alias of references
        citations(clue: number): Reference;

        // Alias and singular
        citation(clue: number): Reference;

        coordinates(clue: string | undefined | null): Coordinate[];

        coordinates(clue: number): Coordinate;

        // Singular
        coordinates(clue: number): Coordinate;

        infoboxes(clue: number): Infobox;

        // generated by plurals
        infobox(clue: number): Infobox;

        infoboxes(): Infobox[];

        text(options: object | null | undefined): string;

        markdown(options: object | null | undefined): string;

        latex(options: object | null | undefined): string;

        html(options: object | null | undefined): string;

        json(options: object | null | undefined): object;

        debug(): Document;
    }

    class Section {

        depth: number;
        doc: Document;
        _title: string;
        data: object;

        title(): string;

        index(): null | number;

        indentation(): number;

        sentences(n: number): Sentence;

        sentences(): Sentence[];

        paragraphs(n: number): Paragraph;

        paragraphs(): Paragraph[];

        paragraph(n: number | undefined | null): Paragraph;

        links(n: number): object;

        links(n: string | undefined | null): object[]

        tables(n: number): Table;

        tables(): Table[];

        templates(clue: number): Template;

        templates(clue: string | undefined | null): Template[]

        infoboxes(clue: number): Infobox;

        infoboxes(): Infobox[];

        coordinates(clue: number): Coordinate;

        coordinates(): Coordinate[];

        lists(clue: number): List;

        lists(): List[];

    }

    class Category {

    }

    class Coordinate {

    }

    class Infobox {

    }

    class Table {

    }

    class Reference {

    }

    class Template {

    }

    class Paragraph {

    }

    class Image {

    }

    class List {

    }

    class Sentence {

    }
}

